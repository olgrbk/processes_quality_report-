import React, { useState } from "react";
import { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, PieChart, Pie, Cell, Tooltip } from "recharts";
import CanvasBackground from "./CanvasBackground";
import mascot from "/mascot.png";

const sections = [
  {
    title: "–ó—Ä–µ–ª–æ—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
    questions: [
      "–ï—Å—Ç—å –ª–∏ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏?",
      "–°–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–¥—Ä–æ–±–Ω—ã–π –ø–ª–∞–Ω –ø—Ä–æ–µ–∫—Ç–∞/–∏—Ç–µ—Ä–∞—Ü–∏–π?",
      "–ü—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ª–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–∞—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∞–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞?",
      "–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ª–∏ —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π?",
      "–°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –≤—ã–ø—É—Å–∫–∞ —Ä–µ–ª–∏–∑–æ–≤?",
      "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å—ã —Å–±–æ—Ä–∫–∏, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è?"
    ]
  },
  {
    title: "–ó—Ä–µ–ª–æ—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ QA",
    questions: [
      "–°—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è?",
      "–ü—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ª–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è?",
      "–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è?",
      "–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ª–∏ –º–µ—Ç–æ–¥–∏–∫–∏ –¥–∏–∑–∞–π–Ω–∞ —Ç–µ—Å—Ç–æ–≤?",
      "–ï—Å—Ç—å –ª–∏ —Å—Ç–∞–±–∏–ª—å–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ä–µ–¥–∞?",
      "–£—á–∞—Å—Ç–≤—É–µ—Ç –ª–∏ QA –≤ —Ä–∞–Ω–Ω–∏—Ö —ç—Ç–∞–ø–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞?",
      "–ü—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ª–∏ –Ω–µ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ?",
      "–°–æ–±–∏—Ä–∞—é—Ç—Å—è –ª–∏ –º–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞?",
      "–ü—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ª–∏ –æ–±—É—á–µ–Ω–∏–µ QA –∫–æ–º–∞–Ω–¥—ã?",
      "–ü—Ä–æ–≤–æ–¥—è—Ç—Å—è –ª–∏ peer-review —Ç–µ—Å—Ç-–∫–µ–π—Å–æ–≤?"
    ]
  },
  {
    title: "–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
    questions: [
      "–£–¥–∞–ª–æ—Å—å –ª–∏ –∏–∑–±–µ–∂–∞—Ç—å –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –¥–µ—Ñ–µ–∫—Ç–æ–≤ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ?",
      ">80% –¥–µ—Ñ–µ–∫—Ç–æ–≤ –≤—ã—è–≤–ª—è–µ—Ç—Å—è –¥–æ —Ä–µ–ª–∏–∑–∞?",
      "–î–æ–ª—è –¥–µ—Ñ–µ–∫—Ç–æ–≤ –ø–æ—Å–ª–µ —Ä–µ–ª–∏–∑–∞ < 10%?",
      "–í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ–∫—Ä—ã—Ç—ã —Ç–µ—Å—Ç–∞–º–∏?",
      "–ï—Å—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ?",
      "–í—Ä–µ–º—è –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–µ–∫—Ç–æ–≤ < 3 –¥–Ω–µ–π?",
      "–ù–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ª–∏ –º–Ω–æ–≥–æ —Ä–µ–≥—Ä–µ—Å—Å–∏–π?"
    ]
  },
  {
    title: "–†–∏—Å–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞",
    questions: [
      "–ü–æ–Ω—è—Ç–Ω—ã –∏ —Å—Ç–∞–±–∏–ª—å–Ω—ã –ª–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è?",
      "–°—Ä–æ–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã?",
      "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –±—é–¥–∂–µ—Ç–∞?",
      "–ö–æ–º–∞–Ω–¥–∞ –æ–±–ª–∞–¥–∞–µ—Ç –Ω—É–∂–Ω–æ–π —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–æ–π?",
      "–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏?",
      "–ù–µ—Ç –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π?",
      "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è –≤ –∫–æ–º–∞–Ω–¥–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞?",
      "–£—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ª–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏?"
    ]
  }
];


  const generateRecommendations = () => {
    const recs = [];

    // Example mappings
    const devGaps = [
      "—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏",
      "–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞",
      "–∞–Ω–∞–ª–∏–∑–∞ —Ä–∏—Å–∫–æ–≤",
      "–∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π",
      "–ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–ª–∏–∑–æ–≤",
      "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ CI/CD"
    ];
    const qaGaps = [
      "—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
      "–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
      "–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏",
      "–º–µ—Ç–æ–¥–∏–∫ —Ç–µ—Å—Ç-–¥–∏–∑–∞–π–Ω–∞",
      "—Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã",
      "—Ä–∞–Ω–Ω–µ–≥–æ –≤–æ–≤–ª–µ—á–µ–Ω–∏—è QA",
      "–Ω–µ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
      "–º–µ—Ç—Ä–∏–∫ –∫–∞—á–µ—Å—Ç–≤–∞",
      "–æ–±—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã QA",
      "peer-review —Ç–µ—Å—Ç-–∫–µ–π—Å–æ–≤"
    ];
    const testingGaps = [
      "—É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –¥–µ—Ñ–µ–∫—Ç–æ–≤",
      "—Ä–∞–Ω–Ω–µ–≥–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –¥–µ—Ñ–µ–∫—Ç–æ–≤",
      "–Ω–∏–∑–∫–æ–π —É—Ç–µ—á–∫–∏ –¥–µ—Ñ–µ–∫—Ç–æ–≤",
      "–ø–æ–∫—Ä—ã—Ç–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π —Ç–µ—Å—Ç–∞–º–∏",
      "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
      "–±—ã—Å—Ç—Ä–æ–≥–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –¥–µ—Ñ–µ–∫—Ç–æ–≤",
      "–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ä–µ–≥—Ä–µ—Å—Å–∏–π"
    ];
    const riskAreas = [
      "–Ω–µ—è—Å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è",
      "–Ω–µ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Å—Ä–æ–∫–∏",
      "–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤",
      "–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã",
      "–Ω–æ–≤—ã–µ/–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
      "–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤",
      "–ø—Ä–æ–±–ª–µ–º—ã –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏",
      "–Ω–µ—É—á—Ç–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    ];

    const gapsBySection = [devGaps, qaGaps, testingGaps, riskAreas];

    sections.forEach((section, sIdx) => {
      section.questions.forEach((q, qIdx) => {
        const key = `${sIdx}-${qIdx}`;
        const answeredNo = answers[key] === false;
        if (answeredNo && gapsBySection[sIdx] && gapsBySection[sIdx][qIdx]) {
          recs.push(`üî∏ –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç: ${gapsBySection[sIdx][qIdx]}. –≠—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø—Ä–æ–±–µ–ª –≤ –∑—Ä–µ–ª–æ—Å—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ (${section.title}).`);
        }
      });
    });

    if (recs.length === 0) {
      recs.push("‚úÖ –í—Å–µ –∫–ª—é—á–µ–≤—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–µ–∫—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –∑—Ä–µ–ª–æ—Å—Ç–∏.");
    }

    return recs;
  };

export default function App() {
  const [answers, setAnswers] = useState({});
  const [submitted, setSubmitted] = useState(false);

  const handleAnswer = (sectionIdx, qIdx, value) => {
    setAnswers({
      ...answers,
      [`${sectionIdx}-${qIdx}`]: value
    });
  };

  const handleSubmit = () => {
    setSubmitted(true);
  };

  const calculateResults = () => {
    return sections.map((section, sectionIdx) => {
      const answeredYes = section.questions.filter((_, qIdx) => answers[`${sectionIdx}-${qIdx}`]);
      return {
        name: section.title,
        value: Math.round((answeredYes.length / section.questions.length) * 100)
      };
    });
  };

  const radarData = calculateResults();
  const pieData = [
    { name: "–í—ã–ø–æ–ª–Ω–µ–Ω–æ (–î–∞)", value: Object.values(answers).filter(a => a).length },
    { name: "–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ (–ù–µ—Ç)", value: Object.values(answers).filter(a => !a).length }
  ];
  const COLORS = ["#34d399", "#f87171"];

  return (
    <>
      <CanvasBackground />
      <div className="relative z-10 p-4 text-white max-w-5xl mx-auto space-y-6">
        <div className="flex items-center gap-4">
          <img src={mascot} alt="Mascot" className="w-14 h-14 rounded-full border border-white" />
          <h1 className="text-2xl font-bold">–û—Ü–µ–Ω–∫–∞ –∑—Ä–µ–ª–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞</h1>
        </div>
        {!submitted ? (
          <>
            {sections.map((section, sectionIdx) => (
              <div key={sectionIdx} className="bg-slate-800">
                <divContent className="p-4 space-y-2">
                  <h2 className="font-semibold text-lg">{section.title}</h2>
                  {section.questions.map((q, qIdx) => (
                    <div key={qIdx} className="mb-2">
                      <p>{q}</p>
                      <div className="space-x-2 mt-1">
                        <button className="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded"
                          
                          onClick={() => handleAnswer(sectionIdx, qIdx, true)}>
                          –î–∞
                        </button>
                        <button className="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded"
                          
                          onClick={() => handleAnswer(sectionIdx, qIdx, false)}>
                          –ù–µ—Ç
                        </button>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            ))}
            <button onClick={handleSubmit} className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded mt-4">–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç</button>
          </>
        ) : (
          <div className="space-y-6">
            <h2 className="text-lg font-semibold">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã</h2>
            <div className="flex flex-wrap gap-8">
              <RadarChart cx={200} cy={200} outerRadius={150} width={400} height={400} data={radarData}>
                <PolarGrid />
                <PolarAngleAxis dataKey="name" />
                <PolarRadiusAxis angle={30} domain={[0, 100]} />
                <Radar name="–ó—Ä–µ–ª–æ—Å—Ç—å" dataKey="value" stroke="#3b82f6" fill="#3b82f6" fillOpacity={0.6} />
              </RadarChart>

              <PieChart width={400} height={400}>
                <Pie data={pieData} cx={200} cy={200} outerRadius={120} dataKey="value" label>
                  {pieData.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                  ))}
                </Pie>
                <Tooltip />
              </PieChart>
            </div>
          </div>
        )}
      </div>
    </>
  );
}
